{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshua leon\\\\Documents\\\\Apps web\\\\BOLETERIA-IA\\\\Front-End\\\\src\\\\components\\\\chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [respuestasIa, setRespuestasIa] = useState([]);\n  const [preguntas, setPreguntas] = useState([]);\n  const RespuestaAngente = ev => {\n    if (ev.key === \"Enter\") {\n      const mensajeInput = document.getElementById(\"mensaje\");\n      const mensaje = mensajeInput.value;\n      // Verificar si el mensaje está vacío o solo contiene espacios en blanco\n      if (!mensaje || mensaje.trim().length === 0) {\n        alert('Debes llenar todos los campos');\n        return;\n      } else {\n        fetch('http://127.0.0.1:4000/Agente', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            question: mensaje\n          })\n        }).then(res => res.json()).then(respuesta => {\n          // Aquí puedes manejar la respuesta del agente\n          const nuevaPregunta = mensaje;\n          const nuevaRespuesta = respuesta.response.output;\n\n          // Añadir el nuevo historial\n          AgregarHistorial(nuevaPregunta, nuevaRespuesta);\n\n          // Actualizar el estado para mostrar la nueva pregunta y respuesta en la interfaz de usuario\n          setPreguntas(prevPreguntas => [...prevPreguntas, nuevaPregunta]);\n          setRespuestasIa(prevRespuestas => [...prevRespuestas, nuevaRespuesta]);\n\n          // Limpiar el input de mensaje\n          mensajeInput.value = '';\n        }).catch(error => console.error('Error:', error));\n      }\n    }\n  };\n  const HistorialAngente = () => {\n    fetch('http://localhost:2501/Historial').then(res => res.json()).then(respuesta => {\n      const preguntasArr = respuesta.map(item => item.Pregunta);\n      const respuestasArr = respuesta.map(item => item.RespuestaIA);\n      setPreguntas(preguntasArr);\n      setRespuestasIa(respuestasArr);\n    }).catch(error => console.error('Error:', error));\n  };\n  const AgregarHistorial = (Pregunta, RespuestaIA) => {\n    fetch('http://localhost:2501/NuevoHistorial', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Pregunta: Pregunta,\n        RespuestaIA: RespuestaIA\n      })\n    }).then(res => res.json()).then(() => {\n      console.log(\"Agregado con éxito\");\n    }).catch(error => console.error('Error:', error));\n  };\n  useEffect(() => {\n    HistorialAngente();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container1\",\n    children: [preguntas.map((pregunta, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"con_user\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circule_user_chat\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-user icon_user1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_mensaje_usuario\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"name_user\",\n            children: \"T\\xFA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: pregunta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"con_IA\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_mensaje_IA\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"name_IA\",\n              children: \"Boletria GT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mensaje_IA\",\n              children: respuestasIa[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circule_IA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cont_input_mensaje\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyDown: RespuestaAngente,\n        className: \"input_mensaje\",\n        type: \"text\",\n        id: \"mensaje\",\n        name: \"mensaje\",\n        placeholder: \"Escribe un mensaje...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"dyE7QzO863uYNdNHXXRbxhFCNuA=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Chat","_s","respuestasIa","setRespuestasIa","preguntas","setPreguntas","RespuestaAngente","ev","key","mensajeInput","document","getElementById","mensaje","value","trim","length","alert","fetch","method","headers","body","JSON","stringify","question","then","res","json","respuesta","nuevaPregunta","nuevaRespuesta","response","output","AgregarHistorial","prevPreguntas","prevRespuestas","catch","error","console","HistorialAngente","preguntasArr","map","item","Pregunta","respuestasArr","RespuestaIA","log","className","children","pregunta","index","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","onKeyDown","type","id","name","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/joshua leon/Documents/Apps web/BOLETERIA-IA/Front-End/src/components/chat.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Chat() {\r\n    const [respuestasIa, setRespuestasIa] = useState([]);\r\n    const [preguntas, setPreguntas] = useState([]);\r\n\r\n    const RespuestaAngente = (ev) => {\r\n        if (ev.key === \"Enter\") {\r\n            const mensajeInput = document.getElementById(\"mensaje\");\r\n            const mensaje = mensajeInput.value;\r\n            // Verificar si el mensaje está vacío o solo contiene espacios en blanco\r\n            if (!mensaje || mensaje.trim().length === 0) {\r\n                alert('Debes llenar todos los campos');\r\n                return;\r\n            } else {\r\n                fetch('http://127.0.0.1:4000/Agente', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        question: mensaje\r\n                    }),\r\n                })\r\n                .then(res => res.json())\r\n                .then((respuesta) => {\r\n                    // Aquí puedes manejar la respuesta del agente\r\n                    const nuevaPregunta = mensaje;\r\n                    const nuevaRespuesta = respuesta.response.output;\r\n    \r\n                    // Añadir el nuevo historial\r\n                    AgregarHistorial(nuevaPregunta, nuevaRespuesta);\r\n                    \r\n                    // Actualizar el estado para mostrar la nueva pregunta y respuesta en la interfaz de usuario\r\n                    setPreguntas(prevPreguntas => [...prevPreguntas, nuevaPregunta]);\r\n                    setRespuestasIa(prevRespuestas => [...prevRespuestas, nuevaRespuesta]);\r\n    \r\n                    // Limpiar el input de mensaje\r\n                    mensajeInput.value = '';\r\n                })\r\n                .catch(error => console.error('Error:', error));\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const HistorialAngente = () => {\r\n        fetch('http://localhost:2501/Historial')\r\n            .then(res => res.json())\r\n            .then((respuesta) => {\r\n                const preguntasArr = respuesta.map(item => item.Pregunta);\r\n                const respuestasArr = respuesta.map(item => item.RespuestaIA);\r\n                setPreguntas(preguntasArr);\r\n                setRespuestasIa(respuestasArr);\r\n            })\r\n            .catch(error => console.error('Error:', error));\r\n    };\r\n\r\n    const AgregarHistorial = (Pregunta, RespuestaIA) => {\r\n        fetch('http://localhost:2501/NuevoHistorial', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                Pregunta: Pregunta,\r\n                RespuestaIA: RespuestaIA\r\n            }),\r\n        })\r\n        .then(res => res.json())\r\n        .then(() => {\r\n            console.log(\"Agregado con éxito\");\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    };\r\n\r\n    useEffect(() => {\r\n        HistorialAngente();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='container1'>\r\n            {/* Renderizado estático */}\r\n\r\n            {/* Renderizado dinámico del historial */}\r\n            {preguntas.map((pregunta, index) => (\r\n                <React.Fragment key={index}>\r\n                    <div className=\"con_user\">\r\n                        <div className=\"circule_user_chat\">\r\n                            <i className='fa-solid fa-user icon_user1'></i>\r\n                        </div>\r\n                        <div className=\"container_mensaje_usuario\">\r\n                            <h2 className=\"name_user\">Tú</h2>\r\n                            <p>{pregunta}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"con_IA\">\r\n                        <div className=\"container_mensaje_IA\">\r\n                            <div className=\"text_container\">\r\n                                <h2 className=\"name_IA\">Boletria GT</h2>\r\n                                <div className=\"mensaje_IA\">{respuestasIa[index]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"circule_IA\"></div>\r\n                    </div>\r\n                </React.Fragment>\r\n            ))}\r\n\r\n            <div className=\"cont_input_mensaje\">\r\n                <input\r\n                    onKeyDown={RespuestaAngente}\r\n                    className=\"input_mensaje\"\r\n                    type=\"text\"\r\n                    id=\"mensaje\"\r\n                    name=\"mensaje\"\r\n                    placeholder=\"Escribe un mensaje...\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}