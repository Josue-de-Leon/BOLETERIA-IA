{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport validator from 'validator';\nimport { loginUser } from './send_user';\nexport const useLoginLogic = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleEmailChange = e => {\n    const inputEmail = e.target.value;\n    setEmail(inputEmail);\n  };\n  const handlePasswordChange = e => {\n    const inputPassword = e.target.value;\n    setPassword(inputPassword);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrorMessage('');\n    const trimmedEmail = email.trim();\n    const trimmedPassword = password.trim();\n\n    // Validar correo electrónico\n    if (!validator.isEmail(trimmedEmail)) {\n      setErrorMessage('Por favor, ingresa un correo electrónico válido.');\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Por favor, ingresa un correo electrónico válido.'\n      });\n      return;\n    }\n\n    // Validar contraseña\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    if (!passwordRegex.test(trimmedPassword)) {\n      setErrorMessage('La contraseña debe tener al menos 8 caracteres, incluyendo al menos una mayúscula, una minúscula, un número y un carácter especial.');\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'La contraseña debe tener al menos 8 caracteres, incluyendo al menos una mayúscula, una minúscula, un número y un carácter especial.'\n      });\n      return;\n    }\n\n    // Si la contraseña pasa la validación, verifique el correo electrónico\n    try {\n      const result = await loginUser(trimmedEmail, trimmedPassword);\n      if (result.success) {\n        navigate('/chatbot');\n      } else {\n        console.error('Login failed: Invalid credentials');\n        setErrorMessage(result.message);\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: 'Correo electrónico o contraseña incorrectos'\n        });\n      }\n    } catch (error) {\n      console.error('Login failed:', error.message || 'Correo electrónico o contraseña incorrectos');\n      setErrorMessage('Correo electrónico o contraseña incorrectos');\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Correo electrónico o contraseña incorrectos'\n      });\n    }\n  };\n  return {\n    email,\n    password,\n    errorMessage,\n    handleEmailChange,\n    handlePasswordChange,\n    handleSubmit\n  };\n};\n_s(useLoginLogic, \"eE05CxDUtBhimkMPPTk2KnyWgL4=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useState","useNavigate","Swal","validator","loginUser","useLoginLogic","_s","email","setEmail","password","setPassword","errorMessage","setErrorMessage","navigate","handleEmailChange","e","inputEmail","target","value","handlePasswordChange","inputPassword","handleSubmit","preventDefault","trimmedEmail","trim","trimmedPassword","isEmail","fire","icon","title","text","passwordRegex","test","result","success","console","error","message"],"sources":["C:/Users/joshua leon/Documents/Apps web/BOLETERIA-IA/Front-End/src/js/logiclogin.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport validator from 'validator';\r\nimport { loginUser } from './send_user';\r\n\r\nexport const useLoginLogic = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleEmailChange = (e) => {\r\n        const inputEmail = e.target.value;\r\n        setEmail(inputEmail);\r\n    };\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const inputPassword = e.target.value;\r\n        setPassword(inputPassword);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setErrorMessage('');\r\n\r\n        const trimmedEmail = email.trim();\r\n        const trimmedPassword = password.trim();\r\n\r\n        // Validar correo electrónico\r\n        if (!validator.isEmail(trimmedEmail)) {\r\n            setErrorMessage('Por favor, ingresa un correo electrónico válido.');\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'Por favor, ingresa un correo electrónico válido.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Validar contraseña\r\n        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n        if (!passwordRegex.test(trimmedPassword)) {\r\n            setErrorMessage('La contraseña debe tener al menos 8 caracteres, incluyendo al menos una mayúscula, una minúscula, un número y un carácter especial.');\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'La contraseña debe tener al menos 8 caracteres, incluyendo al menos una mayúscula, una minúscula, un número y un carácter especial.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Si la contraseña pasa la validación, verifique el correo electrónico\r\n        try {\r\n            const result = await loginUser(trimmedEmail, trimmedPassword);\r\n            if (result.success) {\r\n                navigate('/chatbot');\r\n            } else {\r\n                console.error('Login failed: Invalid credentials');\r\n                setErrorMessage(result.message);\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: 'Correo electrónico o contraseña incorrectos'\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Login failed:', error.message || 'Correo electrónico o contraseña incorrectos');\r\n            setErrorMessage('Correo electrónico o contraseña incorrectos');\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'Correo electrónico o contraseña incorrectos'\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        email,\r\n        password,\r\n        errorMessage,\r\n        handleEmailChange,\r\n        handlePasswordChange,\r\n        handleSubmit\r\n    };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}